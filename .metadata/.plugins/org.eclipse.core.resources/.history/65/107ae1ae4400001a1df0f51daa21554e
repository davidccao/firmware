/** @file sys_main.c 
*   @brief Application main file
*   @date 11-Dec-2018
*   @version 04.07.01
*
*   This file contains an empty main function,
*   which can be used for the application.
*/

/* 
* Copyright (C) 2009-2018 Texas Instruments Incorporated - www.ti.com 
* 
* 
*  Redistribution and use in source and binary forms, with or without 
*  modification, are permitted provided that the following conditions 
*  are met:
*
*    Redistributions of source code must retain the above copyright 
*    notice, this list of conditions and the following disclaimer.
*
*    Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the 
*    documentation and/or other materials provided with the   
*    distribution.
*
*    Neither the name of Texas Instruments Incorporated nor the names of
*    its contributors may be used to endorse or promote products derived
*    from this software without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
*  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
*  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
*  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
*  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
*  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
*  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
*  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
*  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/


/* USER CODE BEGIN (0) */
/* USER CODE END */

/* Include Files */

#include "sys_common.h"

/* USER CODE BEGIN (1) */
#include "sci.h"
/* USER CODE END */

/** @fn void main(void)
*   @brief Application main function
*   @note This function is empty by default.
*
*   This function is called after startup.
*   The user can use this function to implement the application.
*/

/* USER CODE BEGIN (2) */

#include "MCP48FV_DAC_SPI.h"
uint16_t lookUpSine[]={
//                       0x7D0,0x897,0x95D,0xA1F,0xADA,0xB8E,0xC39,0xCD8,0xD6A,0xDEE,0xE62,0xEC6,0xF18,0xF57,0xF82,0xF9A,0xF9F,0xF8F,0xF6B,0xF34,0xEEA,0xE8E,0xE20,0xDA3,0xD16,0xC7C,0xBD7,0xB26,0xA6D,0x9AE,0x8EA,0x823,0x75B,0x694,0x5D0,0x512,0x45A,0x3AC,0x308,0x270,0x1E6,0x16B,0x100,0xA7,0x60,0x2C,0xC,0x0,0x7,0x23,0x52,0x94,0xE9,0x14F,0x1C6,0x24C,0x2E1,0x382,0x42E,0x4E4,0x5A1,0x663,0x729,0x7F1,0x8B9,0x97E,0xA3F,0xAF9,0xBAC,0xC54,0xCF1,0xD81,0xE03,0xE74,0xED5,0xF23,0xF5F,0xF88,0xF9D,0xF9D,0xF8A

                      // 0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f,0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0x7e,0x7f,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,0xa0,0xa1,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,0xab,0xac,0xad,0xae,0xaf,0xb0,0xb1,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xbb,0xbc,0xbd,0xbe,0xbf,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xcb,0xcc,0xcd,0xce,0xcf,0xd0,0xd1,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0,0xe1,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xeb,0xec,0xed,0xee,0xef,0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd
                     //  125,126,127,129,130,131,132,133,135,136,137,138,139,141,142,143,144,145,146,148,149,150,151,152,154,155,156,157,158,159,160,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,200,201,202,203,204,205,206,207,208,209,209,210,211,212,213,214,214,215,216,217,217,218,219,220,220,221,222,223,223,224,225,225,226,227,227,228,228,229,230,230,231,231,232,232,233,234,234,235,235,235,236,236,237,237,238,238,238,239,239,240,240,240,241,241,241,242,242,242,242,243,243,243,243,243,244,244,244,244,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,244,244,244,244,244,244,243,243,243,243,243,242,242,242,242,241,241,241,240,240,240,239,239,239,238,238,237,237,236,236,236,235,235,234,234,233,233,232,231,231,230,230,229,229,228,227,227,226,225,225,224,223,223,222,221,221,220,219,218,218,217,216,215,214,214,213,212,211,210,210,209,208,207,206,205,204,203,202,202,201,200,199,198,197,196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,178,177,176,175,174,173,172,171,170,169,167,166,165,164,163,162,161,159,158,157,156,155,154,153,151,150,149,148,147,145,144,143,142,141,140,138,137,136,135,134,132,131,130,129,128,126,125,124,123,122,120,119
//                       150,160,170,180,189,198,206,214,222,228,234,239,243,246,249,250,250,249,247,245,241,236,231,225,218,210,202,193,183,174,164,154,144,134,124,115,106,97,89,81,74,68,63,58,55,52,51,50,50,52,54,57,62,67,73,79,87,95,104,113,122,132,142,152,162,172,181,190,199,208,216,223,229,235,240,244,247,249,250,250,249,247,244,240,235,230,223,216,208,200,191,182,172,162,152,142,133,123
                   //    150,160,170,180,189,198,206,214,222,228,234,239,243,246,249,250,250,249,247,245,241,236,231,225,218,210,202,193,183,174,164,154,144,134,124,115,106,97,89,81,74,68,63,58,55,52,51,50,50,52,54,57,62,67,73,79,87,95,104,113,122,132,142,152,162,172,181,190,199,208,216,223,229,235,240,244,247,249,250,250,249,247,244,240,235,230,223,216,208,200,191,182,172,162,152,142,133,123
                       120,121,123,124,125,126,128,129,130,132,133,134,135,137,138,139,140,142,143,144,145,147,148,149,150,152,153,154,155,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,214,215,216,217,218,219,219,220,221,222,223,223,224,225,226,226,227,228,228,229,230,230,231,232,232,233,233,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,241,242,242,243,243,243,244,244,244,245,245,245,245,246,246,246,246,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,247,247,247,247,247,247,247,246,246,246,246,245,245,245,245,244,244,244,243,243,243,242,242,242,241,241,240,240,239,239,238,238,237,237,236,236,235,235,234,234,233,232,232,231,230,230,229,229,228,227,226,226,225,224,223,223,222,221,220,220,219,218,217,216,215,215,214,213,212,211,210,209,208,207,206,206,205,204,203,202,201,200,199,198,197,196,195,193,192,191,190,189,188,187,186,185,184,183,182,180,179,178,177,176,175,174,172,171,170,169,168,166,165,164,163,162,160,159,158,157,156,154,153,152,151,149,148,147,146,144,143,142,141,139,138,137,136,134,133,132,130,129,128,127,125,124,123,121,120,119,118,116,115,114,113,111,110,109,107,106,105,104,102,101,100,99,97

};


/* USER CODE END */

int main(void)
{
/* USER CODE BEGIN (3) */

    // set value, 333= 3.33V, 0< input <500
    //    MSP48FV_Set_Value(333);


    //kinda of step function, needs debugging
   // uint32_t i=0;
//    uint32_t j=0;

    MSP48FV_Set_Value(200);

//    mibspiInit();
//   // sciInit();
//
//    for(i=0; i<sizeof(lookUpSine)-1; i++){
//       for (  j=0;j<0xFffF; j++){
//        //   asm("NOP");
//       }
//
//
//
//
//       uint8_t try2= lookUpSine[i];
//
// //      sciSend(sciREG, 1, (unsigned char*)try1);
//
//       uint16_t txbuffer[]={0x00,00, try2}; //debug
//       mibspiSetData(mibspiREG1,0,txbuffer);
//        mibspiTransfer(mibspiREG1,0);
//       while(!(mibspiIsTransferComplete(mibspiREG1,0)));

      // readRegister (0x8);

  //  }

//

/* USER CODE END */

    return 0;
}


/* USER CODE BEGIN (4) */
/* USER CODE END */
